@inject AppState State

@if (ItemGroup != null)
{
    <MudNavGroup Icon="@ItemGroup.Icon" Title="@ItemGroup.Title" Disabled="@(State.IsPrerendering || ItemGroup.Disabled)">
        @foreach (var item in ItemGroup.Children)
        {
            <NavigationMenuItem Item="item" />
        }
    </MudNavGroup>
}
else if (ItemLink != null)
{
    <MudNavLink OnClick="@ItemLink.OnClick" Href="@ItemLink.Path" Icon="@ItemLink.Icon" Disabled="@(State.IsPrerendering || ItemLink.Disabled)" Class="mud-nav-item-centered">
        <div>@ItemLink.Title</div>
        @if(ItemLink.SubTitle != null)
        {
            <div class="navmenu-item-subtitle no-wrap">
                <MudText Typo="MudBlazor.Typo.caption">
                    @if(!String.IsNullOrWhiteSpace(ItemLink.SubTitle))
                    {
                        <span>@ItemLink.SubTitle</span>
                    }
                    else
                    {
                        <MudSkeleton class="NavMenuItem-SubTitle" />
                    }
                </MudText>
            </div>
        }
    </MudNavLink>
}
else
{
    <MudDivider Class="my-2" />
}

@code 
{

    [Parameter]
    public INavigationMenuItem Item { set; get; }

    private NavigationMenuItemGroup ItemGroup => (Item as NavigationMenuItemGroup);

    private NavigationMenuItemLink ItemLink => (Item as NavigationMenuItemLink);

}
