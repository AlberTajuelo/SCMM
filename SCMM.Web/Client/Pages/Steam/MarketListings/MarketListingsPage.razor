@page "/steam/marketplace"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using SCMM.Web.Shared.Domain.DTOs.MarketItems
@using SCMM.Web.Shared
@inject NavigationManager Navigation
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<DocumentTitle Title="Market Listings" />

<style>

    .Market-List-Container {
        max-height: calc(100vh - 150px);
        overflow: auto;
    }

</style>

<MarketListingsSearch OnSearch="@(async (x) => await RefreshItems(x))" />

@if (Items == null)
{
    <Loading />
}
else
{
    <Paper Class="Market-List-Container">
        <MarketListingsTable Items="@Items" OnItemClick="@((x) => OnItemSelectionChanged(x))" />
    </Paper>
}

@code {

    private MarketItemListDTO[] Items { get; set; }

    private int Page { get; set; } = 0;

    private int PageSize { get; set; } = 25;

    protected override async Task OnInitializedAsync()
    {
        await RefreshItems();
    }

    private void OnItemSelectionChanged(MarketItemListDTO item)
    {
        //Navigation.NavigateTo($"steam/marketplace/{item.Id}");
        string url = $"https://steamcommunity.com/market/listings/{item.SteamAppId}/{Uri.EscapeDataString(item.Name)}";
        JSRuntime.InvokeVoidAsync("WindowInterop.openInNewTab", url);
    }

    private async Task RefreshItems(string filter = null)
    {
        try
        {
            Items = null;
            StateHasChanged();
            Items = await Http.GetFromJsonAsync<MarketItemListDTO[]>(
                $"api/market?filter={Uri.EscapeDataString(filter ?? String.Empty)}&pageSize={PageSize}"
            );
            StateHasChanged();
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

}
