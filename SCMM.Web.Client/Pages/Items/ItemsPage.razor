@page "/items"
@page "/skins"
@using SCMM.Web.Client.Shared.Components.Items
@using SCMM.Web.Data.Models.UI.Item
@inject ILogger<ItemsPage> Logger
@inject NavigationManager NavigationManager
@inject HttpClient Http

<PageContainer Title="Items">

    <MudGrid Spacing="2">
        <MudItem xs="12" sm="6">
            <MudTextField T="string" Value="@Filter" ValueChanged="@OnSearch" DebounceInterval="500" Label="Search" Placeholder="Search for an item..." Margin="MudBlazor.Margin.None" Variant="MudBlazor.Variant.Outlined" FullWidth="true" Class="mud-input-transparent ma-0" />
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudSelect T="string" Value="@ItemType" ValueChanged="@(async (x) => { ItemType = x; RefreshItems(); })" Label="Item Type" Clearable="true" Margin="MudBlazor.Margin.None" Variant="MudBlazor.Variant.Outlined" FullWidth="true" Class="mud-input-transparent ma-0" >
                <MudSelectItem Value="@("Acoustic Guitar")" />
                <MudSelectItem Value="@("Armored Door")" />
                <MudSelectItem Value="@("Armored Double Door")" />
                <MudSelectItem Value="@("Assault Rifle")" />
                <MudSelectItem Value="@("Bandana Mask")" />
                <MudSelectItem Value="@("Baseball Cap")" />
                <MudSelectItem Value="@("Beenie Hat")" />
                <MudSelectItem Value="@("Bolt Action Rifle")" />
                <MudSelectItem Value="@("Bone Club")" />
                <MudSelectItem Value="@("Bone Helmet")" />
                <MudSelectItem Value="@("Bone Knife")" />
                <MudSelectItem Value="@("Boonie Hat")" />
                <MudSelectItem Value="@("Boots")" />
                <MudSelectItem Value="@("Bucket Helmet")" />
                <MudSelectItem Value="@("Burlap Headwrap")" />
                <MudSelectItem Value="@("Burlap Shirt")" />
                <MudSelectItem Value="@("Burlap Shoes")" />
                <MudSelectItem Value="@("Burlap Trousers")" />
                <MudSelectItem Value="@("Chair")" />
                <MudSelectItem Value="@("Coffee Can Helmet")" />
                <MudSelectItem Value="@("Combat Knife")" />
                <MudSelectItem Value="@("Concrete Barricade")" />
                <MudSelectItem Value="@("Container")" />
                <MudSelectItem Value="@("Crossbow")" />
                <MudSelectItem Value="@("Custom SMG")" />
                <MudSelectItem Value="@("Double Barrel Shotgun")" />
                <MudSelectItem Value="@("Eoka Pistol")" />
                <MudSelectItem Value="@("F1 Grenade")" />
                <MudSelectItem Value="@("Festive Window Garland")" />
                <MudSelectItem Value="@("Fridge")" />
                <MudSelectItem Value="@("Furnace")" />
                <MudSelectItem Value="@("Garage Door")" />
                <MudSelectItem Value="@("Hammer")" />
                <MudSelectItem Value="@("Hatchet")" />
                <MudSelectItem Value="@("Hazmat Suit")" />
                <MudSelectItem Value="@("Hide Boots")" />
                <MudSelectItem Value="@("Hide Halterneck")" />
                <MudSelectItem Value="@("Hide Pants")" />
                <MudSelectItem Value="@("Hide Poncho")" />
                <MudSelectItem Value="@("Hide Skirt")" />
                <MudSelectItem Value="@("Hide Vest")" />
                <MudSelectItem Value="@("Hoodie")" />
                <MudSelectItem Value="@("Hunting Bow")" />
                <MudSelectItem Value="@("Improvised Balaclava")" />
                <MudSelectItem Value="@("Jacket")" />
                <MudSelectItem Value="@("Jackhammer")" />
                <MudSelectItem Value="@("L96 Rifle")" />
                <MudSelectItem Value="@("Large Wood Box")" />
                <MudSelectItem Value="@("Leather Gloves")" />
                <MudSelectItem Value="@("Locker")" />
                <MudSelectItem Value="@("Longsleeve T-Shirt")" />
                <MudSelectItem Value="@("Longsword")" />
                <MudSelectItem Value="@("LR300")" />
                <MudSelectItem Value="@("M249")" />
                <MudSelectItem Value="@("M39 Rifle")" />
                <MudSelectItem Value="@("Metal Chest Plate")" />
                <MudSelectItem Value="@("Metal Facemask")" />
                <MudSelectItem Value="@("Miners Hat")" />
                <MudSelectItem Value="@("MP5A4")" />
                <MudSelectItem Value="@("Pants")" />
                <MudSelectItem Value="@("Pickaxe")" />
                <MudSelectItem Value="@("Pump Shotgun")" />
                <MudSelectItem Value="@("Python Revolver")" />
                <MudSelectItem Value="@("Reactive Target")" />
                <MudSelectItem Value="@("Resource")" />
                <MudSelectItem Value="@("Revolver")" />
                <MudSelectItem Value="@("Riot Helmet")" />
                <MudSelectItem Value="@("Road Sign Jacket")" />
                <MudSelectItem Value="@("Road Sign Kilt")" />
                <MudSelectItem Value="@("Roadsign Gloves")" />
                <MudSelectItem Value="@("Rock")" />
                <MudSelectItem Value="@("Rocket Launcher")" />
                <MudSelectItem Value="@("Rug")" />
                <MudSelectItem Value="@("Rug Bear Skin")" />
                <MudSelectItem Value="@("Salvaged Icepick")" />
                <MudSelectItem Value="@("Salvaged Sword")" />
                <MudSelectItem Value="@("Sandbag Barricade")" />
                <MudSelectItem Value="@("Satchel Charge")" />
                <MudSelectItem Value="@("Semi-Automatic Pistol")" />
                <MudSelectItem Value="@("Semi-Automatic Rifle")" />
                <MudSelectItem Value="@("Sheet Metal Door")" />
                <MudSelectItem Value="@("Sheet Metal Double Door")" />
                <MudSelectItem Value="@("Shirt")" />
                <MudSelectItem Value="@("Shorts")" />
                <MudSelectItem Value="@("Sleeping Bag")" />
                <MudSelectItem Value="@("Snow Jacket")" />
                <MudSelectItem Value="@("Stone Hatchet")" />
                <MudSelectItem Value="@("Stone Pickaxe")" />
                <MudSelectItem Value="@("Table")" />
                <MudSelectItem Value="@("Tank Top")" />
                <MudSelectItem Value="@("Thompson")" />
                <MudSelectItem Value="@("T-Shirt")" />
                <MudSelectItem Value="@("Underwear Item")" />
                <MudSelectItem Value="@("Unique Item")" />
                <MudSelectItem Value="@("Vending Machine")" />
                <MudSelectItem Value="@("Water Purifier")" />
                <MudSelectItem Value="@("Waterpipe Shotgun")" />
                <MudSelectItem Value="@("Wood Double Door")" />
                <MudSelectItem Value="@("Wood Storage Box")" />
                <MudSelectItem Value="@("Wooden Door")" />
            </MudSelect>
        </MudItem>
        <MudItem xs="12">
            <MudPaper Outlined="true" Class="d-flex flex-row align-center justify-center flex-wrap pa-2 px-4">
                <MudSwitch T="bool" Checked="@Glow" CheckedChanged="@(async (x) => { Glow = x; RefreshItems(); })" Label="Glow" Color="Color.Info" />
                <MudSwitch T="bool" Checked="@Glowsight" CheckedChanged="@(async (x) => { Glowsight = x; RefreshItems(); })" Label="Glowsight" Color="Color.Info" />
                <MudSwitch T="bool" Checked="@Cutout" CheckedChanged="@(async (x) => { Cutout = x; RefreshItems(); })" Label="Cutout" Color="Color.Info" />
                <MudSwitch T="bool" Checked="@Craftable" CheckedChanged="@(async (x) => { Craftable = x; RefreshItems(); })" Label="Craftable" Color="Color.Info" />
                <MudSwitch T="bool" Checked="@SpecialDrop" CheckedChanged="@(async (x) => { SpecialDrop = x; RefreshItems(); })" Label="Special Drop" Color="Color.Info" />
                <MudSwitch T="bool" Checked="@TwitchDrop" CheckedChanged="@(async (x) => { TwitchDrop = x; RefreshItems(); })" Label="Twitch Drop" Color="Color.Info" />
                <MudSwitch T="bool" Checked="@Tradeable" CheckedChanged="@(async (x) => { Tradeable = x; RefreshItems(); })" Label="Tradeable" Color="Color.Info" />
                <MudSwitch T="bool" Checked="@Marketable" CheckedChanged="@(async (x) => { Marketable = x; RefreshItems(); })" Label="Marketable" Color="Color.Info" />
                <MudSwitch T="bool" Checked="@Banned" CheckedChanged="@(async (x) => { Banned = x; RefreshItems(); })" Label="Banned" Color="Color.Info" />
            </MudPaper>
        </MudItem>
        @if (Items == null)
        {
            <MudItem xs="12">
                <Loading Message="Finding items..." />
            </MudItem>
        }
        else 
        {
            @foreach (var item in Items.Items)
            {
                <MudItem xs="6" sm="4" md="3" lg="2" xl="1">
                    <MudPaper Outlined="true" Class="full-height">
                        <ItemDescriptionSummary Item="@item" OnClick="@OnItemClicked" />
                    </MudPaper>
                </MudItem>
            }
            @if(Items.Total > 0)
            {
                <MudItem xs="12" Class="d-flex justify-center">
                    <MudPagination SelectedChanged="@OnPageChange" Color="@Color.Primary" ShowFirstButton="true" ShowLastButton="true" 
                                   Selected="@((int)Math.Floor(Start > 0 ? ((double)Start.Value / Math.Max(Count ?? 100, 1)) + 1 : 1))" 
                                   Count="@((int)Math.Ceiling((double)Items.Total / Math.Max(Count ?? 100, 1)))" />
                </MudItem>
            }
        }
    </MudGrid>

</PageContainer>

@code {

    private PaginatedResult<ItemDescriptionWithPriceDTO> Items { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public string Filter { get; set; }
    
    [Parameter]
    [SupplyParameterFromQuery]
    public string ItemType { get; set; }
    
    [Parameter]
    [SupplyParameterFromQuery]
    public bool Glow { get; set; }
    
    [Parameter]
    [SupplyParameterFromQuery]
    public bool Glowsight { get; set; }
    
    [Parameter]
    [SupplyParameterFromQuery]
    public bool Cutout { get; set; }
    
    [Parameter]
    [SupplyParameterFromQuery]
    public bool Craftable { get; set; }
    
    [Parameter]
    [SupplyParameterFromQuery]
    public bool SpecialDrop { get; set; }
    
    [Parameter]
    [SupplyParameterFromQuery]
    public bool TwitchDrop { get; set; }
    
    [Parameter]
    [SupplyParameterFromQuery]
    public bool Tradeable { get; set; }
    
    [Parameter]
    [SupplyParameterFromQuery]
    public bool Marketable { get; set; }
    
    [Parameter]
    [SupplyParameterFromQuery]
    public bool Banned { get; set; }
    
    [Parameter]
    [SupplyParameterFromQuery]
    public Nullable<int> Start { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public Nullable<int> Count { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await RefreshItems();
    }
    
    private void OnItemClicked(IItemDescription item)
    {
        NavigationManager.NavigateTo($"/item/{item.Name}");  
    }

    private void OnSearch(string text)
    {
        if (Filter != text)
        {
            Filter = text;
            RefreshItems();
        };
    }
    
    private void OnPageChange(int page)
    {
        var newStart = (Math.Max(page - 1, 0) * Math.Max(Count ?? 100, 1));
        if (Start != newStart)
        {
            Start = newStart;
            RefreshItems();
        }
    }
    
    private async Task RefreshItems()
    {
        try
        {
            Items = null;
            StateHasChanged();
            Items = await Http.GetFromJsonAsync<PaginatedResult<ItemDescriptionWithPriceDTO>>(
                $"api/item?filter={Uri.EscapeDataString(Filter ?? String.Empty)}&start={Start ?? 0}&count={Math.Max(Count ?? 100, 1)}&type={Uri.EscapeDataString(Type ?? String.Empty)}&glow={Glow}&glowsight={Glowsight}&cutout={Cutout}&craftable={Craftable}&specialDrop={SpecialDrop}&twitchDrop={TwitchDrop}&tradeable={Tradeable}&marketable={Marketable}&banned={Banned}"
            );
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, $"Error listing items");
        }
        finally
        {
            StateHasChanged();
        }
    }

}
