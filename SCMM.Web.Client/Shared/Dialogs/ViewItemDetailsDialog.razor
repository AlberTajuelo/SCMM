@inherits ResponsiveDialog
@using SCMM.Web.Client.Shared.Components.Items
@using SCMM.Web.Data.Models.UI.Item
@inject ILogger<ViewItemDetailsDialog> Logger
@inject ISnackbar Snackbar
@inject HttpClient Http
@inject AppState State

<MudDialog>
    <TitleContent>
        @if (Item == null)
        {
            <MudText Typo="MudBlazor.Typo.h6">@ItemName</MudText>
        } 
        else
        {
            <MudAvatar Image="@Item.IconUrl" Size="MudBlazor.Size.Medium" />
            <div class="d-inline-block ml-2">
                <div>
                    <MudText Typo="MudBlazor.Typo.h6">@Item.Name</MudText>
                </div>
                <div class="mt-n1">
                    <MudText Typo="MudBlazor.Typo.subtitle1" Color="MudBlazor.Color.Secondary">
                        <span>@Item.ItemType</span>
                    </MudText>
                </div>
            </div>
        }
    </TitleContent>
    <DialogContent>
        @if (Item == null)
        {
            <Loading Message="Loading item..." Size="MudBlazor.Size.Large" Typo="MudBlazor.Typo.h6" />
        } 
        else
        {
            <ItemDescriptionDetails Item="@Item" />
        }
    </DialogContent>
</MudDialog>

@code {

    [Parameter]
    public string ItemName { get; set; }
    
    [Parameter]
    public string ItemUrl { get; set; }

    private ItemDetailedDTO Item { get; set; }
    
    protected override void OnConfigure(ResponsiveDialogOptions options)
    {
        options.FullscreenBreakpoint = MudBlazor.Breakpoint.Md;
        options.MaxWidth = MudBlazor.MaxWidth.ExtraLarge;
        options.FullWidth = true;
        options.CloseButton = true;
    }
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        try
        {
            Item = await Http.GetFromJsonWithDefaultsAsync<ItemDetailedDTO>(ItemUrl);
            Dialog.ForceRender();
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, $"Error loading the item details");
            Snackbar.Add($"Unable to load item details. {ex.Message}", MudBlazor.Severity.Error);
        }
    }

}
