@namespace SCMM.Web.Client.Shared.Component
@using SCMM.Web.Shared.Domain.DTOs.Currencies;
@inject HttpClient Http

@if (Currency != null)
{
    <Typography Variant="@TypographyVariant.H6">
        <span>@Currency.PrefixText @Currency.Name</span>
        <IconButton OnClick="@OnOpen" RootRef="@ButtonRef">
            <ArrowDropDownIcon />
        </IconButton>
        <Menu Open="@Open"
              AnchorRef="@ButtonRef"
              OnClose="@HandleClose"
              PaperStyle="width: 200px; max-height: 400px;">
            @foreach (var currency in Currencies)
            {
                <MenuItem @key="@currency.SteamId"
                          Selected="@(currency.SteamId == Currency.SteamId)"
                          OnClick="@(() => HandleCurrencyChange(currency))">
                    <span style="min-width:30%">@currency.PrefixText</span> 
                    <span>@currency.Name</span>
                </MenuItem>
            }
        </Menu>
    </Typography>
}

@code
{ 
    [Parameter]
    public CurrencyDetailsDTO Currency { get; set; }

    private CurrencyDetailsDTO[] Currencies { get; set; }

    private bool Open { set; get; }

    private IReference ButtonRef { set; get; } = new Reference();

    protected override async Task OnInitializedAsync()
    {
        await RefreshCurrencies();
    }

    private void HandleCurrencyChange(CurrencyDetailsDTO currency)
    {
        Currency = currency;
        Open = false;
        StateHasChanged();
    }

    private void HandleClose(MenuCloseReason reason)
    {
        Open = false;
        StateHasChanged();
    }

    private void OnOpen()
    {
        Open = true;
        StateHasChanged();
    }

    private async Task RefreshCurrencies()
    {
        Currencies = await Http.GetFromJsonAsync<CurrencyDetailsDTO[]>($"Currency");
        if (Currency == null)
        {
            Currency = Currencies?.FirstOrDefault(x => x.IsDefault);
        }
    }

}
