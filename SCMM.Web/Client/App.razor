@inject ILocalStorageService LocalStorage
@inject AppState AppState
@inject HttpClient Http

<AppResources />
<Router AppAssembly="@typeof(Program).Assembly">
    <Found Context="routeData">
        @if (State != null)
        {
            @if (State.IsValid)
            {
                <RouteView RouteData="@routeData" DefaultLayout="@typeof(AppLayout)">
                </RouteView>
            }
            else
            {
                <LayoutView Layout="@typeof(LoginLayout)">
                    <Login />
                </LayoutView>
            }
        }
    </Found>
    <NotFound>
        <LayoutView Layout="@typeof(ErrorLayout)">
            <NotFound />
        </LayoutView>
    </NotFound>
</Router>

@code {

    private AppState State { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await AppState.LoadAsync(LocalStorage);
            await AppState.RefreshAsync(Http);

            State = AppState;
            State.Changed += (s, e) => StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Failed to initialise app. {ex.Message}");
        }
    }

}
