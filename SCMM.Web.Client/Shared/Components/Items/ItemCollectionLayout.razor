@using SCMM.Web.Data.Models.UI.Item
@inject IDialogService Dialogs
@inject ExternalNavigationManager ExternalNavigationManager
@inject AppState State

<div class="d-flex flex-wrap flex-row align-start justify-center">

    @if (AreAnyItemsAvailable("Metal Facemask", "Metal Chest Plate"))
    {
        <div class="collection pa-4" style="grid-template-columns: auto auto auto">
    
            <div class="collection-title mud-paper mud-paper-outlined mud-theme-secondary text-centered pa-1">
                <MudText Typo="MudBlazor.Typo.subtitle2">Attire - Tier 3</MudText>
            </div>

            <ItemCollectionLayoutTile class="collection-item" />
            <ItemCollectionLayoutTile ItemType="Metal Facemask" Item="@FindItem("Metal Facemask")" ItemIsAcquired="@IsItemAquired("Metal Facemask")" class="collection-item" />
            <ItemCollectionLayoutTile class="collection-item" />
    
            <ItemCollectionLayoutTile ItemType="Hoodie" Item="@FindItem("Hoodie")" ItemIsAcquired="@IsItemAquired("Hoodie")"class="collection-item" />
            <ItemCollectionLayoutTile ItemType="Metal Chest Plate" Item="@FindItem("Metal Chest Plate")" ItemIsAcquired="@IsItemAquired("Metal Chest Plate")"class="collection-item" />
            <ItemCollectionLayoutTile class="collection-item" />
    
            <ItemCollectionLayoutTile ItemType="Pants" Item="@FindItem("Pants")" ItemIsAcquired="@IsItemAquired("Pants")" class="collection-item" />
            <ItemCollectionLayoutTile ItemType="Road Sign Kilt" Item="@FindItem("Road Sign Kilt")" ItemIsAcquired="@IsItemAquired("Road Sign Kilt")" class="collection-item" />
            @if (!AreAnyItemsAvailable("Roadsign Gloves") && AreAnyItemsAvailable("Leather Gloves"))
            {
                <ItemCollectionLayoutTile ItemType="Leather Gloves" Item="@FindItem("Leather Gloves")" ItemIsAcquired="@IsItemAquired("Leather Gloves")" class="collection-item" />
            }
            else
            {
                <ItemCollectionLayoutTile ItemType="Roadsign Gloves" Item="@FindItem("Roadsign Gloves")" ItemIsAcquired="@IsItemAquired("Roadsign Gloves")" class="collection-item" />
            }

            <ItemCollectionLayoutTile ItemType="Boots" Item="@FindItem("Boots")" ItemIsAcquired="@IsItemAquired("Boots")" class="collection-item" />
            <ItemCollectionLayoutTile class="collection-item" />
            <ItemCollectionLayoutTile class="collection-item" />

        </div>
    }

    @if (AreAnyItemsAvailable("Coffee Can Helmet", "Road Sign Jacket", "Hoodie"))
    {
        <div class="collection pa-4" style="grid-template-columns: auto auto auto">
    
            <div class="collection-title mud-paper mud-paper-outlined mud-theme-secondary text-centered pa-1">
                <MudText Typo="MudBlazor.Typo.subtitle2">Attire - Tier 2</MudText>
            </div>

            <ItemCollectionLayoutTile class="collection-item" />
            <ItemCollectionLayoutTile ItemType="Coffee Can Helmet" Item="@FindItem("Coffee Can Helmet")" ItemIsAcquired="@IsItemAquired("Coffee Can Helmet")" class="collection-item" />
            <ItemCollectionLayoutTile class="collection-item" />
    
            <ItemCollectionLayoutTile ItemType="Hoodie" Item="@FindItem("Hoodie")" ItemIsAcquired="@IsItemAquired("Hoodie")" class="collection-item" />
            <ItemCollectionLayoutTile ItemType="Road Sign Jacket" Item="@FindItem("Road Sign Jacket")" ItemIsAcquired="@IsItemAquired("Road Sign Jacket")" class="collection-item" />
            <ItemCollectionLayoutTile class="collection-item" />
    
            <ItemCollectionLayoutTile ItemType="Pants" Item="@FindItem("Pants")" ItemIsAcquired="@IsItemAquired("Pants")" class="collection-item" />
            <ItemCollectionLayoutTile ItemType="Road Sign Kilt" Item="@FindItem("Road Sign Kilt")" ItemIsAcquired="@IsItemAquired("Road Sign Kilt")" class="collection-item" />
            @if (!AreAnyItemsAvailable("Roadsign Gloves") && AreAnyItemsAvailable("Leather Gloves"))
            {
                <ItemCollectionLayoutTile ItemType="Leather Gloves" Item="@FindItem("Leather Gloves")" ItemIsAcquired="@IsItemAquired("Leather Gloves")" class="collection-item" />
            }
            else
            {
                <ItemCollectionLayoutTile ItemType="Roadsign Gloves" Item="@FindItem("Roadsign Gloves")" ItemIsAcquired="@IsItemAquired("Roadsign Gloves")" class="collection-item" />
            }

            <ItemCollectionLayoutTile ItemType="Boots" Item="@FindItem("Boots")" ItemIsAcquired="@IsItemAquired("Boots")" class="collection-item" />
            <ItemCollectionLayoutTile class="collection-item" />
            <ItemCollectionLayoutTile class="collection-item" />

        </div>
    }

    @if (AreAnyItemsAvailable("Beenie Hat", "Riot Helmet", "Bucket Helment", "Snow Jacket", "Jacket", "Longsleeve T-Shirt", "Leather Gloves", "Pants"))
    {
        <div class="collection pa-4" style="grid-template-columns: auto auto auto">
    
            <div class="collection-title mud-paper mud-paper-outlined mud-theme-secondary text-centered pa-1">
                <MudText Typo="MudBlazor.Typo.subtitle2">Attire - Tier 1</MudText>
            </div>
    
            <ItemCollectionLayoutTile ItemType="Beenie Hat" Item="@FindItem("Beenie Hat")" ItemIsAcquired="@IsItemAquired("Beenie Hat")" class="collection-item" />
            <ItemCollectionLayoutTile ItemType="Riot Helmet" Item="@FindItem("Riot Helmet")" ItemIsAcquired="@IsItemAquired("Riot Helmet")" class="collection-item" />
            <ItemCollectionLayoutTile ItemType="Bucket Helmet" Item="@FindItem("Bucket Helmet")" ItemIsAcquired="@IsItemAquired("Bucket Helmet")" class="collection-item" />
    
            <ItemCollectionLayoutTile ItemType="Snow Jacket" Item="@FindItem("Snow Jacket")" ItemIsAcquired="@IsItemAquired("Snow Jacket")" class="collection-item" />
            <ItemCollectionLayoutTile ItemType="Jacket" Item="@FindItem("Jacket")" ItemIsAcquired="@IsItemAquired("Jacket")" class="collection-item" />
            <ItemCollectionLayoutTile ItemType="Longsleeve T-Shirt" Item="@FindItem("Longsleeve T-Shirt")" ItemIsAcquired="@IsItemAquired("Longsleeve T-Shirt")" class="collection-item" />

            <ItemCollectionLayoutTile class="collection-item" />
            <ItemCollectionLayoutTile ItemType="Pants" Item="@FindItem("Pants")" ItemIsAcquired="@IsItemAquired("Pants")" class="collection-item" />
            <ItemCollectionLayoutTile ItemType="Leather Gloves" Item="@FindItem("Leather Gloves")" ItemIsAcquired="@IsItemAquired("Leather Gloves")" class="collection-item" />

            <ItemCollectionLayoutTile class="collection-item" />
            <ItemCollectionLayoutTile class="collection-item" />
            <ItemCollectionLayoutTile class="collection-item" />

        </div>
    }

    @if (AreAnyItemsAvailable("Baseball Cap", "Boonie Hat", "Miners Hat", "Improvised Balaclava", "Shirt", "T-Shirt", "Bandana Mask", "Tank Top", "Shorts"))
    {
        <div class="collection pa-4" style="grid-template-columns: auto auto auto auto">
    
            <div class="collection-title mud-paper mud-paper-outlined mud-theme-secondary text-centered pa-1">
                <MudText Typo="MudBlazor.Typo.subtitle2">Clothing</MudText>
            </div>
    
            <ItemCollectionLayoutTile ItemType="Baseball Cap" Item="@FindItem("Baseball Cap")" ItemIsAcquired="@IsItemAquired("Baseball Cap")" class="collection-item" />
            <ItemCollectionLayoutTile ItemType="Boonie Hat" Item="@FindItem("Boonie Hat")" ItemIsAcquired="@IsItemAquired("Boonie Hat")" class="collection-item" />
            <ItemCollectionLayoutTile ItemType="Miners Hat" Item="@FindItem("Miners Hat")" ItemIsAcquired="@IsItemAquired("Miners Hat")" class="collection-item" />
            <ItemCollectionLayoutTile ItemType="Improvised Balaclava" Item="@FindItem("Improvised Balaclava")" ItemIsAcquired="@IsItemAquired("Improvised Balaclava")" class="collection-item" />
    
            <ItemCollectionLayoutTile ItemType="Shirt" Item="@FindItem("Shirt")" ItemIsAcquired="@IsItemAquired("Shirt")" class="collection-item" />
            <ItemCollectionLayoutTile ItemType="T-Shirt" Item="@FindItem("T-Shirt")" ItemIsAcquired="@IsItemAquired("T-Shirt")" class="collection-item" />
            <ItemCollectionLayoutTile ItemType="Bandana Mask" Item="@FindItem("Bandana Mask")" ItemIsAcquired="@IsItemAquired("Bandana Mask")" class="collection-item" />
            <ItemCollectionLayoutTile ItemType="Tank Top" Item="@FindItem("Tank Top")" ItemIsAcquired="@IsItemAquired("Tank Top")" class="collection-item" />

            <ItemCollectionLayoutTile class="collection-item" />
            <ItemCollectionLayoutTile class="collection-item" />
            <ItemCollectionLayoutTile class="collection-item" />
            <ItemCollectionLayoutTile ItemType="Shorts" Item="@FindItem("Shorts")" ItemIsAcquired="@IsItemAquired("Shorts")" class="collection-item" />

            <ItemCollectionLayoutTile class="collection-item" />
            <ItemCollectionLayoutTile class="collection-item" />
            <ItemCollectionLayoutTile class="collection-item" />
            <ItemCollectionLayoutTile class="collection-item" />

        </div>
    }
    
    @if (AreAnyItemsAvailable("Bone Helmet", "Hide Poncho", "Hide Vest", "Hide Halterneck", "Hide Pants", "Hide Skirt", "Hide Boots"))
    {
        <div class="collection pa-4" style="grid-template-columns: auto auto auto">
    
            <div class="collection-title mud-paper mud-paper-outlined mud-theme-secondary text-centered pa-1">
                <MudText Typo="MudBlazor.Typo.subtitle2">Hide</MudText>
            </div>
    
            <ItemCollectionLayoutTile class="collection-item" />
            <ItemCollectionLayoutTile ItemType="Bone Helmet" Item="@FindItem("Bone Helmet")" ItemIsAcquired="@IsItemAquired("Bone Helmet")" class="collection-item" />
            <ItemCollectionLayoutTile class="collection-item" />
    
            <ItemCollectionLayoutTile ItemType="Hide Poncho" Item="@FindItem("Hide Poncho")" ItemIsAcquired="@IsItemAquired("Hide Poncho")" class="collection-item" />
            <ItemCollectionLayoutTile ItemType="Hide Vest" Item="@FindItem("Hide Vest")" ItemIsAcquired="@IsItemAquired("Hide Vest")" class="collection-item" />
            <ItemCollectionLayoutTile ItemType="Hide Halterneck" Item="@FindItem("Hide Halterneck")" ItemIsAcquired="@IsItemAquired("Hide Halterneck")" class="collection-item" />

            <ItemCollectionLayoutTile class="collection-item" />
            <ItemCollectionLayoutTile ItemType="Hide Pants" Item="@FindItem("Hide Pants")" ItemIsAcquired="@IsItemAquired("Hide Pants")" class="collection-item" />
            <ItemCollectionLayoutTile ItemType="Hide Skirt" Item="@FindItem("Hide Skirt")" ItemIsAcquired="@IsItemAquired("Hide Skirt")" class="collection-item" />

            <ItemCollectionLayoutTile class="collection-item" />
            <ItemCollectionLayoutTile ItemType="Hide Boots" Item="@FindItem("Hide Boots")" ItemIsAcquired="@IsItemAquired("Hide Boots")" class="collection-item" />
            <ItemCollectionLayoutTile class="collection-item" />

        </div>
    }
    
    @if (AreAnyItemsAvailable("Burlap Headwrap", "Burlap Shirt", "Burlap Trousers", "Burlap Shoes"))
    {
        <div class="collection pa-4" style="grid-template-columns: auto">
    
            <div class="collection-title mud-paper mud-paper-outlined mud-theme-secondary text-centered pa-1">
                <MudText Typo="MudBlazor.Typo.subtitle2">Burlap</MudText>
            </div>
    
            <ItemCollectionLayoutTile ItemType="Burlap Headwrap" Item="@FindItem("Burlap Headwrap")" ItemIsAcquired="@IsItemAquired("Burlap Headwrap")" class="collection-item" />
            
            <ItemCollectionLayoutTile ItemType="Burlap Shirt" Item="@FindItem("Burlap Shirt")" ItemIsAcquired="@IsItemAquired("Burlap Shirt")" class="collection-item" />
          
            <ItemCollectionLayoutTile ItemType="Burlap Trousers" Item="@FindItem("Burlap Trousers")" ItemIsAcquired="@IsItemAquired("Burlap Trousers")" class="collection-item" />
           
            <ItemCollectionLayoutTile ItemType="Burlap Shoes" Item="@FindItem("Burlap Shoes")" ItemIsAcquired="@IsItemAquired("Burlap Shoes")" class="collection-item" />
           
        </div>
    }
    
    @if (Items.Any(x => x.ItemType.IsRustWeaponItem()))
    {
        <div class="collection pa-4" style="grid-template-columns: auto auto auto">
    
            <div class="collection-title mud-paper mud-paper-outlined mud-theme-secondary text-centered pa-1">
                <MudText Typo="MudBlazor.Typo.subtitle2">Weapons</MudText>
            </div>
            
            @foreach (var item in Items.Where(x => x.ItemType.IsRustWeaponItem()).OrderBy(x => x.ItemType).ThenByDescending(x => x.Id))
            {
                <ItemCollectionLayoutTile Item="@item" ItemIsAcquired="IsItemAquired(item.Id)" class="collection-item" />
            }
            
        </div>
    }
    
    @if (Items.Any(x => x.ItemType.IsRustToolItem()))
    {
        <div class="collection pa-4" style="grid-template-columns: auto auto auto">
    
            <div class="collection-title mud-paper mud-paper-outlined mud-theme-secondary text-centered pa-1">
                <MudText Typo="MudBlazor.Typo.subtitle2">Tools</MudText>
            </div>
            
            @foreach (var item in Items.Where(x => x.ItemType.IsRustToolItem()).OrderBy(x => x.ItemType).ThenByDescending(x => x.Id))
            {
                <ItemCollectionLayoutTile Item="@item" ItemIsAcquired="IsItemAquired(item.Id)" class="collection-item" />
            }
            
        </div>
    }

    @if (Items.Any(x => x.ItemType.IsRustDeployableItem()))
    {
        <div class="collection pa-4" style="grid-template-columns: auto auto auto">
    
            <div class="collection-title mud-paper mud-paper-outlined mud-theme-secondary text-centered pa-1">
                <MudText Typo="MudBlazor.Typo.subtitle2">Deployables</MudText>
            </div>
            
            @foreach (var item in Items.Where(x => x.ItemType.IsRustDeployableItem()).OrderBy(x => x.ItemType).ThenByDescending(x => x.Id))
            {
                <ItemCollectionLayoutTile Item="@item" ItemIsAcquired="IsItemAquired(item.Id)" class="collection-item" />
            }
            
        </div>
    }
    
    @if (Items.Any(x => x.ItemType.IsRustUniqueItem()))
    {
        <div class="collection pa-4" style="grid-template-columns: auto auto auto">
    
            <div class="collection-title mud-paper mud-paper-outlined mud-theme-secondary text-centered pa-1">
                <MudText Typo="MudBlazor.Typo.subtitle2">Unique</MudText>
            </div>
            
            @foreach (var item in Items.Where(x => x.ItemType.IsRustUniqueItem()).OrderBy(x => x.ItemType).ThenByDescending(x => x.Id))
            {
                <ItemCollectionLayoutTile Item="@item" ItemIsAcquired="IsItemAquired(item.Id)" class="collection-item" />
            }
            
        </div>
    }

</div>

@code {

    [Parameter]
    public IEnumerable<ItemDescriptionDTO> Items { get; set; }
    
    [Parameter]
    public IEnumerable<ItemDescriptionDTO> AcquiredItems { get; set; }
    
    private ItemDescriptionDTO FindItem(string itemType)
    {
        return Items.FirstOrDefault(x => x.ItemType == itemType);
    }
    
    private bool? IsItemAquired(ulong id)
    {
        return AcquiredItems?.Any(x => x.Id == id);
    }
    
    private bool? IsItemAquired(string itemType)
    {
        return AcquiredItems?.Any(x => x.ItemType == itemType);
    }
    
    private bool AreAllItemsAvailable(params string[] requiredItemTypes)
    {
        return requiredItemTypes.All(x => 
            Items.Select(y => y.ItemType).ToArray().Contains(x, StringComparer.OrdinalIgnoreCase)
        );
    }

    private bool AreAnyItemsAvailable(params string[] requiredItemTypes)
    {
        return requiredItemTypes.Any(x => 
            Items.Select(y => y.ItemType).ToArray().Contains(x, StringComparer.OrdinalIgnoreCase)
        );
    }

}
