@using SCMM.Web.Data.Models.UI.Store
@inject ILogger<ViewStoreListDialog> Logger
@inject NavigationManager NavigationManager

<MudDialog DisableSidePadding="true" ClassContent="pa-0">
    <TitleContent>
        <MudText Typo="MudBlazor.Typo.h6">Store List</MudText>
    </TitleContent>
    <DialogContent>
        <MudExpansionPanels Elevation="0" DisableBorders="true" Dense="true" Style="max-height:90vh; overflow-x:hidden; overflow-y:scroll">
            @foreach (var group in List.GroupBy(x => x.Start.Year))
            {
                <MudExpansionPanel>
                    <TitleContent>
                        <MudText Typo="MudBlazor.Typo.h6" Color="MudBlazor.Color.Primary">
                            <i class="fas fa-fw fa-calendar mr-1"></i>
                            <span>@group.Key.ToString()</span>
                        </MudText>
                    </TitleContent>
                    <ChildContent>
                        <MudList Clickable="true" Dense="true" DisablePadding="true">
                            @foreach (var item in group.OrderByDescending(x => x.Start))
                            {
                                <MudListItem OnClick="@(() => ViewStore(item))">
                                    <MudText Typo="MudBlazor.Typo.body1" Color="MudBlazor.Color.Default" Class="no-wrap">@item.Start.ToString("MMMM d")@item.Start.GetDaySuffix()</MudText>
                                    @if(!String.IsNullOrEmpty(item.Name))
                                    {
                                        <MudText Typo="MudBlazor.Typo.body2" Color="MudBlazor.Color.Secondary" Class="">@item.Name</MudText>
                                    }
                                </MudListItem>
                            }
                        </MudList>
                    </ChildContent>
                </MudExpansionPanel>
            }
        </MudExpansionPanels>
    </DialogContent>
</MudDialog>

@code {

    [CascadingParameter] 
    public MudDialogInstance Dialog { get; set; }
    
    [Parameter]
    public StoreIdentifierDTO[] List { get; set; }

    protected override void OnInitialized()
    {
        Dialog.Options.NoHeader = true;
        Dialog.Options.CloseButton = false;
        Dialog.Options.MaxWidth = MaxWidth.Small;
        Dialog.SetOptions(Dialog.Options); 
    }

    private void ViewStore(StoreIdentifierDTO store)
    {
        NavigationManager.NavigateTo($"/store/{store.Id}");  
    }
    
    protected override bool ShouldRender() => false;

}
