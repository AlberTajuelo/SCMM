@inject ILocalStorageService LocalStorage
@inject HttpClient Http

<AppResources />
<CascadingValue Value="@State">
    <Router AppAssembly="@typeof(Program).Assembly">
        <Found Context="routeData">
            @if (State != null)
            {
                @if (State.IsValid)
                {
                    <RouteView RouteData="@routeData" DefaultLayout="@typeof(AppLayout)">
                    </RouteView>
                }
                else
                {
                    <LayoutView Layout="@typeof(LoginLayout)">
                        <Login />
                    </LayoutView>
                }
            }
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(ErrorLayout)">
                <NotFound />
            </LayoutView>
        </NotFound>
    </Router>
</CascadingValue>

@code {

    private AppState State { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var appState = new AppState(LocalStorage, Http);
            await appState.LoadAsync();

            State = appState;
            State.Changed += (s, e) => StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Failed to initialise app. {ex.Message}");
        }
    }

}
